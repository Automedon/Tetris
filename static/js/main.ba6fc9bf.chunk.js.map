{"version":3,"sources":["components/styles/StyledCell.js","tetrominos.js","components/Cell.tsx","components/styles/StyledStage.js","components/Stage.tsx","components/styles/StyleDisplay.js","components/Display.tsx","components/styles/StyledStartButton.js","components/StartButton.tsx","components/styles/StyledTetris.js","gameHelpres.js","hooks/usePlayer.js","hooks/useStage.js","components/Tetris.js","hooks/useGameStatus.js","hooks/useInterval.js","App.tsx","serviceWorker.ts","index.tsx"],"names":["StyledCell","styled","div","props","color","type","TETROMINOS","0","shape","I","J","L","O","S","T","Z","randomTetromino","randTetromino","Math","floor","random","length","React","memo","StyledStage","height","width","Stage","stage","map","row","cell","x","key","StyledDisplay","gameover","Display","text","StyledStartButton","button","StartButton","callback","onClick","StyledTetrisWrapper","StyledTetris","createStage","Array","from","fill","checkCollision","player","moveX","moveY","y","tetromino","pos","usePlayer","useState","collided","setPlayer","rotate","matrix","dir","rotatedTetro","_","index","col","reverse","resetPlayer","useCallback","STAGE_WIDTH","prev","clonedPlayer","JSON","parse","stringify","offset","useStage","setStage","rowsCleared","setRowsCleared","useEffect","updateStage","prevStage","newStage","forEach","value","reduce","acc","findIndex","unshift","push","sweepRows","dropTime","setDropTime","gameOver","setGameOver","updatePlayerPos","playerRotate","score","setScore","rows","setRows","level","setLevel","linePoints","calcScore","useGameStatus","movePlayer","drop","console","log","move","keyCode","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","role","tableIndex","onKeyDown","e","onKeyUp","App","className","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ba6fc9bf.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledCell = styled.div`\n\twidth: auto;\n\tbackground: rgba(${props=>props.color},0.8);\n\tborder:${props=>(props.type===0?'0px solid':'4px solid')};\n\tborder-bottom-color: rgba(${props=> props.color},0.1);\n\tborder-top-color: rgba(${props=> props.color},1);\n\tborder-right-color: rgba(${props=> props.color},1);\n\tborder-left-color: rgba(${props=> props.color},0.3);\n`","export const TETROMINOS = {\n  0: { shape: [[0]], color: \"0,0,0\" },\n  I: {\n    shape: [[0, \"I\", 0, 0], [0, \"I\", 0, 0], [0, \"I\", 0, 0], [0, \"I\", 0, 0]],\n    color: \"80,227,230\"\n  },\n  J: {\n    shape: [[0, \"J\", 0], [0, \"J\", 0], [\"J\", \"J\", 0]],\n    color: \"36,95,223\"\n  },\n  L: {\n    shape: [[0, \"L\", 0], [0, \"L\", 0], [0, \"L\", \"L\"]],\n    color: \"223,173,36\"\n  },\n  O: {\n    shape: [[\"O\", \"O\"], [\"O\", \"O\"]],\n    color: \"223,217,36\"\n  },\n  S: {\n    shape: [[0, \"S\", \"S\"], [\"S\", \"S\", 0], [0, 0, 0]],\n    color: \"48,211,56\"\n  },\n  T: {\n    shape: [[0, 0, 0], [\"T\", \"T\", \"T\"], [0, \"T\", 0]],\n    color: \"132,61,198\"\n  },\n  Z: {\n    shape: [[\"Z\", \"Z\", 0], [0, \"Z\", \"Z\"], [0, 0, 0]],\n    color: \"227,78,78\"\n  }\n};\n\nexport const randomTetromino = () => {\n  const tetrominos = \"IJLOSTZ\";\n  const randTetromino =\n    tetrominos[Math.floor(Math.random() * tetrominos.length)];\n  return TETROMINOS[randTetromino];\n};\n","import React from \"react\";\nimport { StyledCell } from \"./styles/StyledCell\";\nimport { TETROMINOS } from \"../tetrominos\";\n\nconst Cell = ({ type }: { type: any }) => (\n  <StyledCell type={type} color={TETROMINOS[type].color} />\n);\n\nexport default React.memo(Cell);\n","import styled from \"styled-components\";\n\nexport const StyledStage = styled.div`\n\tdisplay: grid;\n\tgrid-template-rows: repeat(\n\t${props=>props.height},\n\tcalc(25vw/${props=>props.width})\n\t);\n\tgrid-template-columns: repeat(\n\t${props=>props.width}, 1fr\n\t);\n\tgrid-gap: 1px;\n\tborder: 2px solid #333;\n\twidth: 100%;\n\tmax-width: 25vw;\n\tbackground: #111;\n`\n","import React from \"react\";\nimport Cell from \"./Cell\";\nimport {StyledStage} from \"./styles/StyledStage\";\n\n\nconst Stage=({stage}:{stage:any})=>(\n    <StyledStage width={stage[0].length} height={stage.length}>\n        {stage.map(row=>row.map((cell,x)=><Cell type={cell[0]} key={x}/>))}\n    </StyledStage>\n)\n\nexport default Stage","import styled from \"styled-components\";\n\nexport const StyledDisplay = styled.div`\n\tbox-sizing: border-box;\n\tdisplay: flex;\n\talign-items: center;\n\tmargin: 0 0 20px 0;\n\tpadding: 20px;\n\tborder: 4px solid #333;\n\tmin-height: 30px;\n\twidth:100%;\n\tborder-radius: 20px;\n\tcolor: ${props=>props.gameover?'red':'#999'};\n\tbackground: #000;\n\tfont-family: Pixel,Arial,\"Helvetica Neue\",sans-serif;\n\tfont-size: 0.8 rem;\n`","import React from \"react\";\nimport {StyledDisplay} from \"./styles/StyleDisplay\";\n\n\nconst Display=({gameover,text}:{gameover:any,text:any})=>(\n    <StyledDisplay>\n        {text}\n    </StyledDisplay>\n)\n\nexport default Display","import styled from \"styled-components\";\n\nexport const StyledStartButton = styled.button`\n\tbox-sizing: border-box;\n\tmax-width: 0 0 20px 0;\n\tpadding: 30px;\n\twidth: 100%;\n\tborder-radius: 20px;\n\tborder: none;\n\tcolor: white;\n\tbackground: #333;\n\tfont-family: Pixel,Arial;\n\tfont-size: 1rem;\n\toutline:none;\n\tcursor: pointer;\n`\n","import React from \"react\";\nimport { StyledStartButton } from \"./styles/StyledStartButton\";\n\nconst StartButton = ({ callback }: { callback: object }) => (\n  <StyledStartButton onClick={callback}>Start Game</StyledStartButton>\n);\n\nexport default StartButton;\n","import styled from \"styled-components\";\n\nexport const StyledTetrisWrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n  overflow: hidden;\n`;\n\nexport const StyledTetris = styled.div`\n  display: flex;\n  align-items: flex-start;\n  padding: 40px;\n  margin: 0 auto;\n  max-width: available;\n  aside {\n    width: 100%;\n    max-width: 150px;\n    display: block;\n    padding: 0 20px;\n  }\n`;\n","export const STAGE_WIDTH = 12;\nexport const STAGE_HEIGHT = 20;\n\nexport const createStage = () =>\n  Array.from(Array(STAGE_HEIGHT), () =>\n    new Array(STAGE_WIDTH).fill([0, \"clear\"])\n  );\n\nexport const checkCollision = (player, stage, { x: moveX, y: moveY }) => {\n  for (let y = 0; y < player.tetromino.length; y++) {\n    for (let x = 0; x < player.tetromino[y].length; x++) {\n      if (player.tetromino[y][x] !== 0) {\n        if (\n          !stage[y + player.pos.y + moveY] ||\n          !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\n          stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !==\n            \"clear\"\n        ) {\n          return true;\n        }\n      }\n    }\n  }\n};\n","import { useState, useCallback } from \"react\";\n\nimport { randomTetromino, TETROMINOS } from \"../tetrominos\";\nimport { checkCollision, STAGE_WIDTH } from \"../gameHelpres\";\n\nexport const usePlayer = () => {\n  const [player, setPlayer] = useState({\n    pos: { x: 0, y: 0 },\n    tetromino: TETROMINOS[0].shape,\n    collided: false\n  });\n  const updatePlayerPos = ({ x, y, collided }) => {\n    setPlayer(prev => ({\n      ...prev,\n      pos: { x: (prev.pos.x += x), y: (prev.pos.y += y) },\n      collided\n    }));\n  };\n  const rotate = (matrix, dir) => {\n    const rotatedTetro = matrix.map((_, index) =>\n      matrix.map(col => col[index])\n    );\n    if (dir > 0) return rotatedTetro.map(row => row.reverse());\n    return rotatedTetro.reverse();\n  };\n  const playerRotate = (stage, dir) => {\n    const clonedPlayer = JSON.parse(JSON.stringify(player));\n    clonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir);\n    const pos = clonedPlayer.pos.x;\n    let offset = 1;\n    while (checkCollision(clonedPlayer, stage, { x: 0, y: 0 })) {\n      clonedPlayer.pos.x += offset;\n      offset = -(offset + (offset > 0 ? 1 : -1));\n      if (offset > clonedPlayer.tetromino[0].length) {\n        rotate(clonedPlayer.tetromino, -dir);\n        clonedPlayer.pos.x = pos;\n        return;\n      }\n    }\n    setPlayer(clonedPlayer);\n  };\n  const resetPlayer = useCallback(() => {\n    setPlayer({\n      pos: { x: STAGE_WIDTH / 2 - 2, y: 0 },\n      tetromino: randomTetromino().shape,\n      collided: false\n    });\n  }, []);\n\n  return [player, updatePlayerPos, resetPlayer, playerRotate];\n};\n","import { useState, useEffect } from \"react\";\nimport { createStage } from \"../gameHelpres\";\n\nexport const useStage = (player, resetPlayer) => {\n  const [stage, setStage] = useState(createStage());\n  const [rowsCleared, setRowsCleared] = useState(0);\n  useEffect(() => {\n    setRowsCleared(0);\n    const sweepRows = newStage =>\n      newStage.reduce((acc, row) => {\n        if (row.findIndex(cell => cell[0] === 0) === -1) {\n          setRowsCleared(prev => prev + 1);\n          acc.unshift(new Array(newStage[0].length).fill([0, \"clear\"]));\n          return acc;\n        }\n        acc.push(row);\n        return acc;\n      }, []);\n    const updateStage = prevStage => {\n      //Clear stage\n      const newStage = prevStage.map(row =>\n        row.map(cell => (cell[1] === \"clear\" ? [0, \"clear\"] : cell))\n      );\n      //Then Draw the tetromino\n      player.tetromino.forEach((row, y) => {\n        row.forEach((value, x) => {\n          if (value !== 0) {\n            newStage[y + player.pos.y][x + player.pos.x] = [\n              value,\n              `${player.collided ? \"merged\" : \"clear\"}`\n            ];\n          }\n        });\n      });\n      if (player.collided) {\n        resetPlayer();\n        return sweepRows(newStage);\n      }\n      return newStage;\n    };\n    setStage(prev => updateStage(prev));\n  }, [player, resetPlayer]);\n  return [stage, setStage, rowsCleared];\n};\n","import React, { useState } from \"react\";\nimport Stage from \"./Stage\";\nimport Display from \"./Display\";\nimport StartButton from \"./StartButton\";\nimport { StyledTetris, StyledTetrisWrapper } from \"./styles/StyledTetris\";\nimport { usePlayer } from \"../hooks/usePlayer\";\nimport { useStage } from \"../hooks/useStage\";\nimport useInterval from \"../hooks/useInterval\";\nimport { createStage, checkCollision } from \"../gameHelpres\";\nimport { useGameStatus } from \"../hooks/useGameStatus\";\n\nconst Tetris = () => {\n  const [dropTime, setDropTime] = useState(null);\n  const [gameOver, setGameOver] = useState(false);\n  const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\n\n  const [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\n  const [score, setScore, rows, setRows, level, setLevel] = useGameStatus(\n    rowsCleared\n  );\n  const movePlayer = dir => {\n    if (!checkCollision(player, stage, { x: dir, y: 0 })) {\n      updatePlayerPos({ x: dir, y: 0 });\n    }\n  };\n\n  const startGame = () => {\n    setStage(createStage());\n    setDropTime(1000);\n    resetPlayer();\n    setGameOver(false);\n    setScore(0);\n    setRows(0);\n    setLevel(0);\n  };\n  const drop = () => {\n    if (rows > (level + 1) * 10) {\n      setLevel(prev => prev + 1);\n      setDropTime(1000 / (level + 1) + 200);\n    }\n    if (!checkCollision(player, stage, { x: 0, y: 1 })) {\n      updatePlayerPos({ x: 0, y: 1, collided: false });\n    } else {\n      if (player.pos.y < 1) {\n        console.log(\"Game Over\");\n        setGameOver(true);\n        setDropTime(null);\n      }\n      updatePlayerPos({ x: 0, y: 0, collided: true });\n    }\n  };\n\n  const keyUp = ({ keyCode }) => {\n    if (!gameOver) {\n      if (keyCode === 40) {\n        setDropTime(1000 / (level + 1) + 200);\n      }\n    }\n  };\n\n  const dropPlayer = () => {\n    setDropTime(null);\n    drop();\n  };\n  const move = ({ keyCode }) => {\n    if (!gameOver) {\n      if (keyCode === 37) {\n        movePlayer(-1);\n      } else if (keyCode === 39) {\n        movePlayer(1);\n      } else if (keyCode === 40) {\n        dropPlayer();\n      } else if (keyCode === 38) {\n        playerRotate(stage, 1);\n      }\n    }\n  };\n\n  useInterval(() => {\n    drop();\n  }, dropTime);\n\n  return (\n    <StyledTetrisWrapper\n      role=\"button\"\n      tableIndex=\"0\"\n      onKeyDown={e => move(e)}\n      onKeyUp={keyUp}\n    >\n      <StyledTetris>\n        <Stage stage={stage} />\n        <aside>\n          {gameOver ? (\n            <Display gameover={gameOver} text=\"Game Over\" />\n          ) : (\n            <div>\n              <Display text={`Score: ${score}`} />\n              <Display text={`Rows: ${rows}`} />\n              <Display text={`Level: ${level}`} />\n            </div>\n          )}\n          <StartButton callback={startGame} />\n        </aside>\n      </StyledTetris>\n    </StyledTetrisWrapper>\n  );\n};\n\nexport default React.memo(Tetris);\n","import { useState, useEffect, useCallback } from \"react\";\n\nexport const useGameStatus = rowsCleared => {\n  const [score, setScore] = useState(0);\n  const [rows, setRows] = useState(0);\n  const [level, setLevel] = useState(0);\n  const linePoints = [40, 100, 300, 1200];\n\n  const calcScore = useCallback(() => {\n    //We have score\n    if (rowsCleared > 0) {\n      setScore(prev => prev + linePoints[rowsCleared - 1] * (level + 1));\n      setRows(prev => prev + rowsCleared);\n    }\n  }, [level, linePoints, rowsCleared]);\n\n  useEffect(() => {\n    calcScore();\n  }, [calcScore, rowsCleared, score]);\n  return [score, setScore, rows, setRows, level, setLevel];\n};\n","///<reference path=\"../../node_modules/@types/react/index.d.ts\"/>\nimport { useEffect, useRef } from 'react';\n\nexport default function(callback, delay) {\n  const savedCallback = useRef();\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","import React from \"react\";\nimport Tetris from \"./components/Tetris\";\n\nconst App = () => (\n  <div className=\"App\">\n    <Tetris />\n  </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}